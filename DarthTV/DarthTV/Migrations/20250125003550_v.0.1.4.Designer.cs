// <auto-generated />
using System;
using DarthTV.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DarthTV.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20250125003550_v.0.1.4")]
    partial class v014
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DarthTV.DB.Entities.Admin.ConfigurationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("DarthTV.DB.Entities.Tv.TvCountryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("TvItemEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TvItemEntityId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("DarthTV.DB.Entities.Tv.TvEpisodeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EpisodeNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Released")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TvSeasonEntityId")
                        .HasColumnType("int");

                    b.Property<string>("imdbID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("imdbRating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TvSeasonEntityId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("DarthTV.DB.Entities.Tv.TvGenreEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("TvItemEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TvItemEntityId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("DarthTV.DB.Entities.Tv.TvItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Awards")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImdbID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ImdbRating")
                        .HasColumnType("float");

                    b.Property<double?>("Metascore")
                        .HasColumnType("float");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosterUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Released")
                        .HasColumnType("datetime2");

                    b.Property<int>("RuntimeMinutes")
                        .HasColumnType("int");

                    b.Property<int?>("SeasonsCount")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.Property<int>("YearFrom")
                        .HasColumnType("int");

                    b.Property<int>("YearTo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("DarthTV.DB.Entities.Tv.TvLanguageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("TvItemEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TvItemEntityId");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("DarthTV.DB.Entities.Tv.TvPersonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActorId")
                        .HasColumnType("int");

                    b.Property<int?>("DirectorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActor")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDirector")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWriter")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WriterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActorId");

                    b.HasIndex("DirectorId");

                    b.HasIndex("WriterId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("DarthTV.DB.Entities.Tv.TvSeasonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SeasonNumber")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TvItemEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TvItemEntityId");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("DarthTV.DB.Entities.Tv.TvCountryEntity", b =>
                {
                    b.HasOne("DarthTV.DB.Entities.Tv.TvItemEntity", null)
                        .WithMany("Country")
                        .HasForeignKey("TvItemEntityId");
                });

            modelBuilder.Entity("DarthTV.DB.Entities.Tv.TvEpisodeEntity", b =>
                {
                    b.HasOne("DarthTV.DB.Entities.Tv.TvSeasonEntity", null)
                        .WithMany("Episodes")
                        .HasForeignKey("TvSeasonEntityId");
                });

            modelBuilder.Entity("DarthTV.DB.Entities.Tv.TvGenreEntity", b =>
                {
                    b.HasOne("DarthTV.DB.Entities.Tv.TvItemEntity", null)
                        .WithMany("Genres")
                        .HasForeignKey("TvItemEntityId");
                });

            modelBuilder.Entity("DarthTV.DB.Entities.Tv.TvLanguageEntity", b =>
                {
                    b.HasOne("DarthTV.DB.Entities.Tv.TvItemEntity", null)
                        .WithMany("Languages")
                        .HasForeignKey("TvItemEntityId");
                });

            modelBuilder.Entity("DarthTV.DB.Entities.Tv.TvPersonEntity", b =>
                {
                    b.HasOne("DarthTV.DB.Entities.Tv.TvItemEntity", null)
                        .WithMany("Actors")
                        .HasForeignKey("ActorId");

                    b.HasOne("DarthTV.DB.Entities.Tv.TvItemEntity", null)
                        .WithMany("Directors")
                        .HasForeignKey("DirectorId");

                    b.HasOne("DarthTV.DB.Entities.Tv.TvItemEntity", null)
                        .WithMany("Writers")
                        .HasForeignKey("WriterId");
                });

            modelBuilder.Entity("DarthTV.DB.Entities.Tv.TvSeasonEntity", b =>
                {
                    b.HasOne("DarthTV.DB.Entities.Tv.TvItemEntity", null)
                        .WithMany("Seasons")
                        .HasForeignKey("TvItemEntityId");
                });

            modelBuilder.Entity("DarthTV.DB.Entities.Tv.TvItemEntity", b =>
                {
                    b.Navigation("Actors");

                    b.Navigation("Country");

                    b.Navigation("Directors");

                    b.Navigation("Genres");

                    b.Navigation("Languages");

                    b.Navigation("Seasons");

                    b.Navigation("Writers");
                });

            modelBuilder.Entity("DarthTV.DB.Entities.Tv.TvSeasonEntity", b =>
                {
                    b.Navigation("Episodes");
                });
#pragma warning restore 612, 618
        }
    }
}
